% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Plots.R
\name{ParallelPlot}
\alias{ParallelPlot}
\title{Parallel Plot (Plot)}
\usage{
ParallelPlot(data, rows, columns, dependentVariable, dependentVariableName,
  lineSize, alphaLine, x_lab, colours)
}
\arguments{
\item{data}{an object of class "data.frame" containing just numerical columns.}

\item{rows}{an object of class "numeric" containing the list of rows
that you want in your parallel plot.}

\item{columns}{an object of class "numeric" containing the list of columns
that you want in your parallel plot.}

\item{dependentVariable}{an object of class "numeric", "factor" or "integer" is
a list of values containig the dependent variable.}

\item{dependentVariableName}{is an optional parameter. It's an string that
contains the name of your dependent variable.}

\item{lineSize}{is an optional parameter of class numeric with a single value
that represent the line size of plot.}

\item{alphaLine}{is an optional parameter of class numeric with a single value
that represent the alpha of lines in the plot.}

\item{x_lab}{a boolean that represent if you want or not the x axis scale. In
some cases, when you have many columns the plot could be ugly! The default value
is False.}

\item{colours}{is an optional parameter of class character with a list of colours
to use in the plot. The default value for continuos dependent variable is
c("darkred", "yellow", "darkgreen") and for categorical dependent variable are
the default colours defined by ggplot.}
}
\description{
Generate a plot of the columns of a data set for all or a range of instances. In
some cases this is useful to identify some patron.
}
\examples{
#Example 1
iris.x <- iris[,1:4] # These are the independent variables
Species <- iris[,5] # This is the dependent variable

# A ParallelPlot of all rows and all columns
ParallelPlot(iris.x, seq(1,nrow(iris.x),1), seq(1,ncol(iris.x),1), Species, "Species", 1, 0.5, TRUE)
# A ParallelPlot of all rows and some columns
ParallelPlot(iris.x, seq(1,nrow(iris.x),1), c(3,4), Species, "Species", 1, 0.5, TRUE)
# A ParallelPlot with a different colours palette
myPalette <- c("darkolivegreen4", "goldenrod1", "dodgerblue4")
ParallelPlot(iris.x, seq(1,nrow(iris.x),1), seq(1,ncol(iris.x),1), Species, "Species", 1, 0.5, TRUE, colours = myPalette)


#Example 2
# Getting a clean data set (without missing values)
cars <- read.csv("https://dl.dropboxusercontent.com/u/12599702/autosclean.csv", sep = ";", dec = ",")
cars.x <- cars[,1:16] # These are the independent variables
cars.y <- cars[,17] # This is the dependent variable

# A ParallelPlot of all rows and all columns
ParallelPlot(cars.x, seq(1,nrow(cars.x),1), seq(1,ncol(cars.x),1), cars.y, "Price", 1, 0.5, TRUE)
# A ParallelPlot of all rows and some columns
ParallelPlot(cars.x, seq(1,nrow(cars.x),1), c(1,2,5,8,13,14), cars.y, "Price", 1, 0.8, TRUE)
# A ParallelPlot with a different colours palette
myPalette <- c("darkolivegreen4", "goldenrod1", "dodgerblue4")
ParallelPlot(cars.x, seq(1,nrow(cars.x),1), c(1,2,5,8,13,14), cars.y, "Price", 1, 0.8, TRUE, colours = myPalette)
}

